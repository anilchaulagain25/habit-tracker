{"version":3,"sources":["models/HabitFormModel.js","components/HabitForm.js","Service.js","components/HabitGridItem.js","components/HabitGrid.js","Utils.js","App.js","index.js"],"names":["HabitFormModel","obj","this","Title","Id","Description","Time","Period","Done","HabitForm","props","useState","model","setModel","onSubmit","event","preventDefault","class","for","value","onChange","state","target","id","name","required","type","max","min","style","Service","LOCAL_STORAGE_KEY","result","localStorage","getItem","JSON","parse","arr","setItem","stringify","HabitGridItem","habit","toFixed","disabled","onClick","updateHabitProgress","HabitGrid","habits","map","Utils","replace","c","r","Math","random","toString","App","service","getExistingHabits","setHabits","useEffect","setExistingHabits","item","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1c213fd.chunk.js","sourcesContent":["export class HabitFormModel {\n    constructor(obj) {\n        obj = obj || {};\n        this.Title = obj.Title || \"\";\n        this.Id = obj.Id || \"\";\n        this.Description = obj.Description || \"\";\n        this.Time = obj.Time || 0;\n        this.Period = obj.Period || \"D\";\n        this.Done = obj.Done || 0;\n    }\n}","import React, { useState } from 'react';\nimport { HabitFormModel } from '../models/HabitFormModel';\nexport const HabitForm = (props) => {\n    const [model, setModel] = useState(new HabitFormModel());\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        props.onSubmit(model);\n        setModel(new HabitFormModel());\n    };\n    return (<div>\n        <form onSubmit={handleSubmit}>\n\n            <div class=\"form-group row\">\n                <div class=\"col-sm-3\">\n                    <label for=\"txtTitle\">Title</label>\n                    <input class=\"form-control\" value={model.Title} onChange={(event) => setModel((state, props) => ({ ...state, Title: event.target.value }))} id=\"txtTitle\" name=\"Title\" required=\"required\" type=\"text\" />\n                </div>\n                <div class=\"col-sm-6\">\n                    <label for=\"txtDescription\">Description</label>\n                    <input class=\"form-control\" value={model.Description} onChange={(event) => setModel((state, props) => ({ ...state, Description: event.target.value }))} required=\"required\" id=\"txtDescription\" type=\"text\" />\n                </div>\n\n            </div>\n            <div class=\"form-group row\">\n                <div class=\"col-sm-3\">\n                    <label for=\"txtTime\">Time</label>\n                    <input max=\"999\" class=\"form-control\" value={model.Time} min=\"1\" onChange={(event) => setModel((state, props) => ({ ...state, Time: event.target.value }))} required=\"required\" id=\"txtTime\" type=\"number\" />\n                </div>\n                <div class=\"col-sm-6\">\n                    <label for=\"ddlPeriod\">Period</label>\n                    <select class=\"form-control\" value={model.Period} onChange={(event) => setModel((state, props) => ({ ...state, Period: event.target.value }))} required=\"required\" id=\"ddlPeriod\">\n                        <option value=\"D\">Day</option>\n                        <option value=\"M\">Month</option>\n                        <option value=\"Y\">Year</option>\n                    </select>\n                </div>\n                <div class=\"col-sm-2\">\n                    <input type=\"submit\" style={{ 'margin-top': '23px' }} class=\"btn btn-primary\" value=\"Save\" />\n                </div>\n            </div>\n        </form>\n        {/* <form onSubmit={handleSubmit}>\n            <h1>Enter your habit details ::</h1>\n            <hr />\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            <label for=\"txtTitle\">Title</label>\n                        </td>\n                        <td>\n                            <input value={model.Title} onChange={(event) => setModel((state, props) => ({ ...state, Title: event.target.value }))} id=\"txtTitle\" name=\"Title\" required=\"required\" type=\"text\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label for=\"txtDescription\">Description</label>\n                        </td>\n                        <td>\n                            <input value={model.Description} onChange={(event) => setModel((state, props) => ({ ...state, Description: event.target.value }))} required=\"required\" id=\"txtDescription\" type=\"text\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label for=\"txtTime\">Time</label>\n                        </td>\n                        <td>\n                            <input max=\"999\" value={model.Time} min=\"1\" onChange={(event) => setModel((state, props) => ({ ...state, Time: event.target.value }))} required=\"required\" id=\"txtTime\" type=\"number\" />\n                        </td>\n                        <td>\n                            <select value={model.Period} onChange={(event) => setModel((state, props) => ({ ...state, Period: event.target.value }))} required=\"required\" id=\"ddlPeriod\">\n                                <option value=\"D\">Day</option>\n                                <option value=\"M\">Month</option>\n                                <option value=\"Y\">Year</option>\n                            </select>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <input type=\"submit\" value=\"Add\" />\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </form> */}\n    </div>);\n};","export class Service {\n    LOCAL_STORAGE_KEY = \"habits\";\n\n    getExistingHabits() {\n        const result = localStorage.getItem(this.LOCAL_STORAGE_KEY);\n        if (result) return JSON.parse(result);\n        else return [];\n    }\n    setExistingHabits(arr) {\n        localStorage.setItem(this.LOCAL_STORAGE_KEY, JSON.stringify(arr));\n    }\n}","import React from 'react'\nimport { HabitFormModel } from '../models/HabitFormModel';\n\nexport const HabitGridItem = (props) => {\n    const habit = new HabitFormModel(props.habit);\n    return (<div class=\"col-md-4\">\n        <div class=\"card text-center\">\n            <div class=\"card-header\">\n                {habit.Title}\n            </div>\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{habit.Description}</h5>\n                <p class=\"card-text\">{habit.Done}/{habit.Time} ({(habit.Done * 100 / habit.Time).toFixed(2)} %)</p>\n                <button class=\"btn btn-primary\" disabled={habit.Done >= habit.Time} onClick={() => props.updateHabitProgress(habit.Id)}>+1</button>\n\n            </div>\n            <div class=\"card-footer text-muted\">\n                2 days ago\n            </div>\n        </div>\n    </div >);\n\n}","import React from 'react'\nimport { HabitGridItem } from './HabitGridItem'\n\nexport const HabitGrid = (props) => {\n    return (\n        <div class=\"row\">\n            {props.habits.map(habit => <HabitGridItem updateHabitProgress={props.updateHabitProgress} habit={habit} />)}\n        </div>);\n}","export const Utils = {\n    uuidv4() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}","import 'bootstrap/dist/css/bootstrap.min.css'\nimport './components/HabitForm';\nimport { HabitForm } from './components/HabitForm';\nimport { useEffect, useState } from 'react';\nimport { Service } from './Service';\nimport { HabitGrid } from './components/HabitGrid';\nimport { Utils } from './Utils';\n\nfunction App() {\n  const service = new Service();\n  const [habits, setHabits] = useState(service.getExistingHabits());\n  const habitFormOnSubmit = (model) => {\n    model.Id = model.Id || Utils.uuidv4();\n    setHabits((state, props) => ([...state, model]));\n\n  };\n  const updateHabitProgress = (id) => {\n    const item = habits.find(habit => habit.Id === id);\n    if (item.Done < item.Time) {\n      item.Done = item.Done + 1;\n      setHabits([...habits]);\n    }\n  }\n  useEffect(() => { service.setExistingHabits(habits); }, [habits]);\n\n  return (\n    <div class=\"container\">\n      <div class=\"py-5\">\n        <div class=\"row\">\n          <div class=\"col-md-8 mx-auto\">\n            <h1>HABIT TRACKER</h1>\n            <HabitForm onSubmit={habitFormOnSubmit} />\n            <hr />\n          </div>\n          <div class=\"col-md-8 mx-auto\">\n            <HabitGrid habits={habits} updateHabitProgress={updateHabitProgress} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}